<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Hibernate, Relational Persistence for Idiomatic Java ~ ~ Copyright 
	(c) 2010, Red Hat Inc. or third-party contributors as ~ indicated by the 
	@author tags or express copyright attribution ~ statements applied by the 
	authors. All third-party contributions are ~ distributed under license by 
	Red Hat Inc. ~ ~ This copyrighted material is made available to anyone wishing 
	to use, modify, ~ copy, or redistribute it subject to the terms and conditions 
	of the GNU ~ Lesser General Public License, as published by the Free Software 
	Foundation. ~ ~ This program is distributed in the hope that it will be useful, 
	~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
	~ or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
	License ~ for more details. ~ ~ You should have received a copy of the GNU 
	Lesser General Public License ~ along with this distribution; if not, write 
	to: ~ Free Software Foundation, Inc. ~ 51 Franklin Street, Fifth Floor ~ 
	Boston, MA 02110-1301 USA -->
 
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

	<session-factory>

		<!-- Database connection settings -->
		<property name="connection.driver_class">org.postgresql.Driver</property>
		<property name="connection.url">jdbc:postgresql://127.0.0.1:5432/mtest</property>
		<property name="hibernate.default_schema">public</property>
		<property name="connection.username">postgres</property>
		<property name="connection.password">postgres</property>
		<property name="transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</property>

		<!-- JDBC connection pool (use the built-in) -->
		<property name="connection.pool_size">10</property>

		<!-- SQL dialect -->
		<property name="dialect">org.hibernate.dialect.PostgreSQL82Dialect</property>

		<!-- Disable the second-level cache -->
		<property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>

		<!-- Echo all executed SQL to stdout -->
		<property name="show_sql">true</property>

		<property name="hibernate.multiTenancy">SCHEMA</property>
		<property name="hibernate.tenant_identifier_resolver">com.example.tenancy.SchemaResolver</property>
		<property name="hibernate.multi_tenant_connection_provider">com.example.tenancy.MultiTenantConnectionProvider</property>


		<property name="hbm2ddl.auto">update</property>

		<mapping class="com.example.tenancy.table.LoginDetail" />
	</session-factory>

</hibernate-configuration>
